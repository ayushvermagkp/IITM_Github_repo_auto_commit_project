from abc import ABC, abstractmethod

class BaseGenerator(ABC):
    @abstractmethod
    def generate_round1(self, brief, checks, attachments):
        """Generate files for Round 1 - Initial implementation"""
        pass
    
    @abstractmethod
    def generate_round2(self, brief, checks, attachments, existing_files):
        """Generate files for Round 2 - Modifications/updates"""
        pass
    
    def create_readme(self, brief, setup_instructions, usage_instructions, round_num=1):
        return f"""# Project - Round {round_num}

## Description
{brief}

## Setup
{setup_instructions}

## Usage
{usage_instructions}

## Features
- Auto-generated based on requirements
- Responsive design
- MIT Licensed

## Files
- `index.html` - Main application
- `script.js` - Application logic
- `LICENSE` - MIT License

## Round {round_num} Implementation
This implementation addresses the Round {round_num} requirements.

---
*Auto-generated by LLM Deployment System*
"""
